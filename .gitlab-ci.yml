before_script:
 - apt-get update -qq

build-minimal:
 script:
 - apt-get install -y -qq cmake libsdl2-dev tidy
 - rm -rf /usr/include/zlib.h /usr/include/png.h /usr/include/readline*
 - CFLAGS="-D_FORTIFY_SOURCE=3"
   ./configure --disable-dsp --enable-debug --disable-tracing --enable-werror
 - make -j$(nproc)
 - ctest -j$(nproc)

build-32bit:
 script:
 - dpkg --add-architecture i386
 - apt-get update -qq
 - apt-get install -y cmake clang file gcc-multilib
                      libgcc1:i386 libportmidi-dev:i386 libpng-dev:i386
                      libglib2.0-dev:i386 zlib1g-dev:i386
                      libsdl2-dev:i386 libudev-dev:i386 libreadline-dev:i386
 - CC="clang" CFLAGS="-m32 -O3 -Werror -D_FORTIFY_SOURCE=3"
   ./configure --enable-debug
 - make -j$(nproc)
 - file src/hatari | grep 32.bit
 - ctest -j$(nproc)

build-mingw:
 image: fedora:latest
 before_script:
 - dnf update -y
 - dnf install -y cmake make gcc mingw32-gcc mingw32-SDL2 mingw32-zlib
 script:
 - cmake -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchain-mingw32-win64_32.cmake
         -DENABLE_WERROR:BOOL=1 .
 - make -j$(nproc)

build-fedora:
  image: fedora:latest
  variables:
    GIT_DEPTH: 1000
  before_script:
    - dnf update -y
    - dnf install -y cmake make gcc diffutils python-unversioned-command
          capstone-devel GraphicsMagick SDL2-devel libpng-devel zlib-devel tidy
          python3-gobject gtk3 readline-devel man git rpmdevtools
  script:
    - rpmdev-setuptree
    - VERSION=$(git describe | sed -e s,-,^, -e s,-,.,)
    - sed -i s/^\#define\ PROG_NAME\ .*/\#define\ PROG_NAME\ \"Hatari\ $VERSION\"/
        src/includes/version.h
    - git diff > ~/rpmbuild/SOURCES/hatari-version.patch
    - echo Patch1\:\ hatari-version.patch > ~/rpmbuild/SPECS/hatari.spec
    - sed s/^Version:.*/Version:\ $VERSION/ < hatari.spec >> ~/rpmbuild/SPECS/hatari.spec
    - git archive --prefix=hatari-$VERSION/ -o
        ~/rpmbuild/SOURCES/hatari-$VERSION.tar.bz2 HEAD
    - rpmbuild -ba ~/rpmbuild/SPECS/hatari.spec
    - cp ~/rpmbuild/SRPMS/hatari-v*.rpm ~/rpmbuild/RPMS/x86_64/hatari-v*.rpm .
  artifacts:
    paths:
      - ./*.rpm

pages:
  stage: deploy
  script:
    - mkdir -p public/doc
    - cp doc/*.html doc/*.css doc/*.js doc/*.txt public/doc/
    - cp -r doc/images public/doc/
    - apt-get install -y -qq doxygen
    - cd doc/doxygen/ ; doxygen ; cd ../..
    - cp -r doc/doxygen/html public/doxygen/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
